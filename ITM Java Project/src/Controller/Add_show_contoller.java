package Controller;
/*
 * This class will add show
 */
import java.net.URL;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.ResourceBundle;

import com.mysql.jdbc.PreparedStatement;

import Model.Connector;
import Model.daoModel;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.DatePicker;
import javafx.scene.control.TextField;
import javafx.scene.control.Alert.AlertType;
import javafx.stage.Stage;

public class Add_show_contoller implements Initializable {
	daoModel dao = new daoModel();
	private static ResultSet rs;
	@FXML
	private Button close_button;
	@FXML
	private ComboBox ah_insert_Movie_ID;
	@FXML
	private ComboBox ah_insert_screen;
	@FXML
	private DatePicker ah_insert_show_Date;
	@FXML
	private TextField ah_insert_show_Time;
	@FXML
	private ComboBox ah_insert_available_seats;
	Connector con = new Connector();
	ObservableList<Integer> Movie_ID = FXCollections.observableArrayList();// using setters and getters creating observable list
	ObservableList<Integer> Screen_ID = FXCollections.observableArrayList();
	ObservableList<Integer> Available_Seats = FXCollections.observableArrayList();
	int get_screen_ID;
	int get_movie_id;
	int get_seats_avail;
	String insert_show_Date;
	String insert_show_Time;

	@Override
	public void initialize(URL location, ResourceBundle resources) {
		try {
			//setting up the movie ID
			String query = "Select Movie_ID from a_hund_movie;";
			PreparedStatement pst = (PreparedStatement) con.getConnection().prepareStatement(query);
			rs = pst.executeQuery(query);
			while (rs.next()) {
				Movie_ID.add(rs.getInt("Movie_ID"));
				// data.add(rs.getString("movie_name"));

			}

			// System.out.println(data);
			ah_insert_Movie_ID.getItems().setAll(Movie_ID);

		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
		try {
			//get the screen ID
			String query = "Select Screen_ID from a_hund_screen;";
			PreparedStatement pst = (PreparedStatement) con.getConnection().prepareStatement(query);
			rs = pst.executeQuery(query);
			while (rs.next()) {
				Screen_ID.add(rs.getInt("Screen_ID"));
				// data.add(rs.getString("movie_name"));

			}

			// System.out.println(data);
			ah_insert_screen.getItems().setAll(Screen_ID);

		} catch (Exception e) {
			System.out.println(e.getMessage());
		}

	}// end method

	public void Show_Available_Seats_Data(ActionEvent event) 
		{
		try {
			get_screen_ID = (Integer) ah_insert_screen.getValue();
			String seats_query = "Select Total_seats from a_hund_screen where screen_id=" + get_screen_ID;
			PreparedStatement pst = (PreparedStatement) con.getConnection().prepareStatement(seats_query);
			rs = pst.executeQuery(seats_query);

			while (rs.next()) {
				Available_Seats.add(rs.getInt("Total_seats"));

			}
			ah_insert_available_seats.getItems().setAll(Available_Seats);
		} catch (Exception e) 
		{
			System.out.println(e.getMessage());
		}
	}

	public void exit(ActionEvent event) {
		// TODO Autogenerated
		Stage stage = (Stage) close_button.getScene().getWindow();
		// do what you have to do
		stage.close();
	}

	public void insert_shows() throws Exception {
		get_screen_ID = (int) ah_insert_screen.getValue();
		get_movie_id = (int) ah_insert_Movie_ID.getValue();
		get_seats_avail = (int) ah_insert_available_seats.getValue();
		insert_show_Date = ah_insert_show_Date.getValue().toString();
		insert_show_Time = ah_insert_show_Time.getText();
		try {
			if (insert_show_Date.matches("\\d{4}-\\d{2}-\\d{2}")) {
				if (insert_show_Time.matches("(1[012]|[1-9]):[0-5][0-9](\\s)?(?i)(am|pm|AM|PM)")) {
					dao.insert_show(get_screen_ID, get_movie_id, insert_show_Date, get_seats_avail, insert_show_Time);
				} else {
					Alert mv_name_alert = new Alert(AlertType.INFORMATION);
					mv_name_alert.setTitle("Wrong Time inserted");
					mv_name_alert.setHeaderText(null);
					mv_name_alert.setContentText("Please Enter Time as HH:MM AM|PM|pm|am");
					mv_name_alert.showAndWait();
				}
			} else {
				Alert mv_name_alert = new Alert(AlertType.INFORMATION);
				mv_name_alert.setTitle("Wrong Date Inserted");
				mv_name_alert.setHeaderText(null);
				mv_name_alert.setContentText("Please Enter correct Date as YYYY-MM-DD");
				mv_name_alert.showAndWait();
			}
		} catch (Exception e) {
			Alert mv_name_alert = new Alert(AlertType.INFORMATION);
			mv_name_alert.setTitle("Wrong Movie Name");
			mv_name_alert.setHeaderText(null);
			mv_name_alert.setContentText("Please Enter only Text charatcers");
			mv_name_alert.showAndWait();
		}
	}

}
